{% load static %}
<html>
<head>
<title>Hive13 Open Finance Data</title>
<link rel="stylesheet" type="text/css" href="{% static 'finance/css/tabs.css' %}">
<script type="text/javascript" src="{% static 'finance/node_modules/jquery/dist/jquery.min.js' %}"></script>
<script type="text/javascript" src="{% static 'finance/node_modules/canvasjs/dist/canvasjs.3.js' %}"></script>
<script type="text/javascript" src="{% static 'finance/node_modules/moment/min/moment.min.js' %}"></script>
<script type="text/javascript" src="{% static 'finance/node_modules/underscore/underscore-min.js' %}"></script>
<script type="text/javascript" src="{% static 'finance/js/tabs.js' %}"></script>
<script type="text/javascript">
    window.onload = function() {
        var dataPoints = [];
	 
        function getBankData(csv,col) {
            var dataPoints = [];
	    var csvLines = [];
	    var points = [];
            csvLines = csv.split(/[\r?\n|\r|\n]+/);         
		        
            for (var i = 2; i < csvLines.length; i++)
                if (csvLines[i].length > 0) {
		    points = csvLines[i].split(",");
                    dataPoints.push({ 
                        x: moment(points[0], "MM-DD-YY").toDate(), 
                        y: parseFloat(points[col]) 		
                    });
                }
            return dataPoints;
        }
	function transpose(arr){
		newarr = _.zip.apply(null, arr);
		return newarr;
	}
        function getMemberStats(csv,col) {
	    var dataPoints = [];
	    var csvLines = [];
	    var pointer = [];
	    var points = [];
	    var pointses = [];
            csvLines = csv.split(/[\r?\n|\r|\n]+/);
	    for (var i = 2; i < csvLines.length; i++)
                if (csvLines[i].length > 0) {
                    lines = csvLines[i].split(",");
		    pointses.push(lines);
		}
	    pointer = transpose(pointses);

	    for (var i = 1; i < pointer.length; i++)
                if (pointer[i].length > 0) {
                    points = pointer[i];
		    datea = moment(points[0], "MMM YYYY")
		    yval = 0
		    if (isNaN(parseFloat(points[col]))) {
			yval = parseFloat(0) } else {
			yval = parseFloat(points[col]) }
		    if (datea.isValid()) {
                    dataPoints.push({
                        y: yval,
                        x: datea.toDate()
                    });
		    }
                }
	    return dataPoints;
        }
	$.get("./data/bankbalance.csv", function(data) {
	    var chart1 = new CanvasJS.Chart("combinedBalance", {
		    title: {
		         text: "Combined Bank Account/Paypal Balance",
		    },
		axisX:{
		    title: "Date",
		    gridThickness: 1
		},
		axisY:{
                    title: "",
                    gridthickness: 1,
		    valueFormatString: "$#,###,###.##"
                },    
		data: [{
		         type: "line",
			 color: "#5B9BD5",
			 lineThickness: 3,
			 yValueFormatString: "$#,###,###.##",
			 legendText: "Beginning Balance",
			 showInLegend: true,
		         dataPoints: getBankData(data,15)
		      },
			{
                         type: "line",
			 color: "#A5A5A5",
			 lineThickness: 3,
                         yValueFormatString: "$#,###,###.##",
			 legendText: "Ending Balance",
                         showInLegend: true,
                         dataPoints: getBankData(data,17)
                      }
                      ]

	     });
	     chart1.render();
	     var chart2 = new CanvasJS.Chart("inOut", {
                    title: {
                         text: "In/Out",
                    },
                axisX:{
                    title: "Date",
                    gridThickness: 1
                },
		axisY:{
		    title: "",
		    gridthickness: 1,
		    stripLines:[{value:0,color:"#FF0000"}],
		    valueFormatString: "$#,###,###.##"
		},    
                data: [{
                         type: "line",
			 color: "#ED7D31",
			 lineThickness: 3,
			 yValueFormatString: "$#,###,###.##",
                         legendText: "In/Out",
                         showInLegend: false,
                         dataPoints: getBankData(data,16)
                      }
                      ]

             });	
	
	      chart2.render();

	});
	$.get("./data/membershipdata.csv", function(data) {
	    var chart3 = new CanvasJS.Chart("membershiplevels", {
		    toolTip: {
			shared: true
		    },
		    title: {
		         text: "Memberships"
		    },
                axisX:{
                    title: "Date",
                    gridThickness: 0,
		    valueFormatString: "MMM YYYY"
                },
		axisY:{
                    title: "",
                    gridthickness: 1,
		    //valueFormatString: "$#,###,###.##"
                },    
		data: [{
		         name: "Cornerstone",
			 type: "stackedColumn",
			 color: "#FF0000",
			 legendText: "Cornerstone",
			 showInLegend: true,
		         dataPoints: getMemberStats(data,1)
                      },{
		         name: "Full",
		         type: "stackedColumn",
			 color: "#00B050",
			 legendText: "Full",
			 showInLegend: true,
		         dataPoints: getMemberStats(data,2)
                      },{
		         name: "Warden (Full)",
		         type: "stackedColumn",
			 color: "#0070C0",
			 legendText: "Warden (Full)",
			 showInLegend: true,
		         dataPoints: getMemberStats(data,3)
                      },{
		         name: "Student",
		         type: "stackedColumn",
			 color: "#FFC000",
			 legendText: "Student",
			 showInLegend: true,
		         dataPoints: getMemberStats(data,4)
                      },{
		         name: "Warden (Student)",
		         type: "stackedColumn",
			 color: "#7030A0",
			 indexLabel: "#total",
			 indexLabelFontColor: "black",
			 legendText: "Warden (Student)",
			 showInLegend: true,
		         dataPoints: getMemberStats(data,5)
                      }
                      ]

	     });
	     chart3.render();
 	     var chart4 = new CanvasJS.Chart("incomeBreakdown", {
		    toolTip: {
			shared: true
		    },
		    title: {
		         text: "Income"
		    },
                axisX:{
                    title: "Date",
                    gridThickness: 0,
		    valueFormatString: "MMM YYYY"
                },
		axisY:{
                    title: "",
                    gridthickness: 1,
		    //valueFormatString: "$#,###,###.##"
                },    
		data: [{
		         name: "Cornerstone",
			 type: "stackedColumn",
			 color: "#FF0000",
			 legendText: "Cornerstone Member Dues",
			 showInLegend: true,
		         dataPoints: getMemberStats(data,16)
                      },{
		         name: "Full",
		         type: "stackedColumn",
			 color: "#00B050",
			 legendText: "Full Member Dues",
			 showInLegend: true,
		         dataPoints: getMemberStats(data,17)
                      },{
		         name: "Warden (Full)",
		         type: "stackedColumn",
			 color: "#0070C0",
			 legendText: "Warden-Full Member Dues",
			 showInLegend: true,
		         dataPoints: getMemberStats(data,18)
                      },{
		         name: "Student",
		         type: "stackedColumn",
			 color: "#FFC000",
			 legendText: "Student Member Dues",
			 showInLegend: true,
		         dataPoints: getMemberStats(data,19)
                      },{
		         name: "Warden (Student)",
		         type: "stackedColumn",
			 color: "#7030A0",
			 legendText: "Warden-Student Member Dues",
			 showInLegend: true,
		         dataPoints: getMemberStats(data,20)
                      },{
		         name: "Laser Income",
		         type: "stackedColumn",
			 color: "DarkOrange",
			 legendText: "Laser Minute Purchases",
			 showInLegend: true,
		         dataPoints: getMemberStats(data,31)
                      },{
		         name: "Other Income",
		         type: "stackedColumn",
			 color: "DarkGrey",
			 legendText: "Other Income",
			 showInLegend: true,
		         dataPoints: getMemberStats(data,30)
                      }
                      ]

	     });
	     chart4.render();
 	     var chart5 = new CanvasJS.Chart("monthlyExpenses", {
		    toolTip: {
			shared: true
		    },
		    title: {
		         text: "Monthly Expenses"
		    },
                axisX:{
                    title: "Date",
                    gridThickness: 0,
		    valueFormatString: "MMM YYYY"
                },
		axisY:{
                    title: "",
                    gridthickness: 1,
		    //valueFormatString: "$#,###,###.##"
                },    
		data: [{
			 type: "pie",
		         dataPoints:[
				{ y: 1150, indexLabel: "Rent" },
				{ y: 64.15, indexLabel: "Cable" },
				{ y: 59.51, indexLabel: "Internet" }
			] 
                      }]

	     });
	     chart5.render();
 	     var chart6 = new CanvasJS.Chart("currentMembership", {
		    toolTip: {
			shared: true
		    },
		    title: {
		         text: "Current Membership"
		    },
                axisX:{
                    title: "Date",
                    gridThickness: 0,
		    valueFormatString: "MMM YYYY"
                },
		axisY:{
                    title: "",
                    gridthickness: 1,
                },    
		data: [{
			 type: "pie",
	 		 dataPoints: getMemberStats(data,30)
		}]

	     });
	     chart6.render();
	});
  }
</script>
</head>
<body>
<a href="https://hive13.org"><img src="{% static 'finance/img/logo.png' %}" height=100px style="padding-bottom: 10px; vertical-align: middle"></a><font face="sans" size="75px" style="vertical-align: middle; padding-left: 10px"><b>Open Finance Data</b></font>
 <ul class="tab">
  <li><a href="javascript:void(0)" class="tablinks" onclick="openTab(event, 'BankBalance')" id="defaultOpen">Bank Balance</a></li>
  <li><a href="javascript:void(0)" class="tablinks" onclick="openTab(event, 'Membership')">Memberships</a></li>
  <li><a href="javascript:void(0)" class="tablinks" onclick="openTab(event, 'ExpenseIncome')">Expenses/Income</a></li>
  <li><a href="javascript:void(0)" class="tablinks" onclick="openTab(event, 'RawData')">Raw Data</a></li>
</ul>

<div id="BankBalance" class="tabcontent">
  <div class="chart" id="combinedBalance" style="width:100%; height:400px;"></div>
  <hr>
  <div class="chart" id="inOut" style="width:100%; height:300px;"></div>
</div>

<div id="Membership" class="tabcontent">
  <div class="chart" id="currentMembership" style="width:100%; height:400px;"></div>
  <div class="chart" id="membershiplevels" style="width:100%; height:400px;"></div>
</div>

<div id="ExpenseIncome" class="tabcontent">
  <div class="chart" id="monthlyExpenses" style="width:100%; height:400px;"></div>
  <hr>
  <div class="chart" id="incomeBreakdown" style="width:100%; height:400px;"></div>
</div>

<div id="RawData" class="tabcontent">
<table width="100%">
<tr> 
<tdi rowspan=2><b>The source data for this site is available in the following formats:</b></td>
</tr>
<tr>
<td><u>Bank Account Financial Trends</u>:</td>
<td><u>Membership Financial Trends</u>:</td>
</tr>
<tr>
<td><a href='/data/bankbalance.csv'>CSV</a></td>
<td><a href='/data/membershipdata.csv'>CSV</a></td>
</tr>
<tr>
<td><a href='/sourcedata/Hive13.bank.account.financial.trends.xlsx'>XLXS</a></td>
<td><a href='/sourcedata/Hive13.membership.financial.trends.xlsx'>XLXS</a></td>
</tr>
</tr>
<tr>
<td><a href='/sourcedata/Hive13.bank.account.financial.trends.pdf'>PDF</a></td>
<td><a href='/sourcedata/Hive13.membership.financial.trends.pdf'>PDF</a></td>
</tr>

</div>
<script>
document.getElementById("defaultOpen").click();
</script>
</body>
</html>
